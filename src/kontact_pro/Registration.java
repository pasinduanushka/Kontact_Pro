/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package kontact_pro;

import java.awt.Toolkit;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.io.UnsupportedEncodingException;
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Pasindu
 */
public class Registration extends javax.swing.JFrame {

    /**
     * Creates new form Login
     */
    public Registration() {
        initComponents();
        setIcon();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        uName = new javax.swing.JTextField();
        passHint = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        pass = new javax.swing.JPasswordField();
        rePass = new javax.swing.JPasswordField();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Kontact Pro");
        setResizable(false);
        getContentPane().setLayout(null);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kontact_pro/images/back.png"))); // NOI18N
        jLabel2.setToolTipText("Back");
        jLabel2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel2MouseClicked(evt);
            }
        });
        getContentPane().add(jLabel2);
        jLabel2.setBounds(820, 450, 43, 50);

        jLabel3.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel3.setText("User Name");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(240, 150, 140, 30);

        jLabel4.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel4.setText("Password");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(240, 200, 140, 30);

        jLabel5.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel5.setText("Password Re-Type");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(240, 250, 140, 30);

        jLabel6.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel6.setText("Password Hint");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(240, 300, 140, 30);

        uName.setBackground(new java.awt.Color(203, 221, 253));
        getContentPane().add(uName);
        uName.setBounds(420, 150, 170, 30);

        passHint.setBackground(new java.awt.Color(203, 221, 253));
        getContentPane().add(passHint);
        passHint.setBounds(420, 300, 170, 30);

        jButton1.setBackground(new java.awt.Color(182, 203, 252));
        jButton1.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jButton1.setText("Register");
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(280, 370, 170, 30);

        jButton2.setBackground(new java.awt.Color(182, 203, 252));
        jButton2.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jButton2.setText("Reset");
        jButton2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2);
        jButton2.setBounds(500, 370, 70, 30);

        pass.setBackground(new java.awt.Color(203, 221, 253));
        getContentPane().add(pass);
        pass.setBounds(420, 200, 170, 30);

        rePass.setBackground(new java.awt.Color(203, 221, 253));
        getContentPane().add(rePass);
        rePass.setBounds(420, 250, 170, 30);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kontact_pro/images/background.png"))); // NOI18N
        getContentPane().add(jLabel1);
        jLabel1.setBounds(0, 0, 910, 540);

        setSize(new java.awt.Dimension(912, 567));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseClicked

//open login page
        Login login = new Login();
        login.setLocationRelativeTo(this);
        login.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jLabel2MouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        //rest text fields
        uName.setText("");
        pass.setText("");
        rePass.setText("");
        passHint.setText("");
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        //register new user
        FileWriter fw = null;
        try {

            // get data from text fields
            File flie = new File("UserReg.txt");
            fw = new FileWriter(flie, true);
            PrintWriter pw = new PrintWriter(fw);
            String name = uName.getText();
            String pass1 = pass.getText();
            String pass2 = rePass.getText();
            String hint = passHint.getText();

            // check user name already exites
            File file = new File("UserReg.txt");
            Scanner sc = new Scanner(file);

            List<String> list = new ArrayList<String>();

            while (sc.hasNext()) {
                list.add(sc.nextLine());
            }

            boolean alreadyExit = false;

            for (String str : list) {

                String[] arr = str.split("ÿ");
                String usName = decrypt(arr[1].trim());
                if (usName.equalsIgnoreCase(uName.getText().trim())) {
                    alreadyExit = true;
                    break;
                }

            }

            int count = list.size();

            int id = count++;

            if (alreadyExit) {
                JOptionPane.showMessageDialog(this, "User Name Already Exits!", "Error", WIDTH);
            } else {

                int lenName = name.length();
                int lenPass = pass1.length();
                int lenHint = hint.length();

                if (lenName < 4) {
                    JOptionPane.showMessageDialog(this, "User Name should be more than 4 digits", "Error", WIDTH);
                } else if (lenPass < 4) {
                    JOptionPane.showMessageDialog(this, "Password should be more than 4 digits", "Error", WIDTH);
                } else if (lenHint < 4) {
                    JOptionPane.showMessageDialog(this, "Hint should be more than 4 digits", "Error", WIDTH);
                } else {

                    if (pass1.equals(pass2)) {
                        String nameEn = encrypt(name);
                        String pass1En = encrypt(pass1);
                        String pass2En = encrypt(pass2);
                        String hintEn = encrypt(hint);

                        pw.println(id + "ÿ" + nameEn + "ÿ" + pass1En + "ÿ" + pass2En + "ÿ" + hintEn);
                        pw.flush();
                        JOptionPane.showMessageDialog(this, "User Registered Successfully!", "Registered Successfully", WIDTH);
                        Login log = new Login();
                        log.setLocationRelativeTo(this);
                        log.setVisible(true);
                        this.dispose();
                    } else {
                        JOptionPane.showMessageDialog(this, "Password doestn't match", "Error", WIDTH);
                    }
                }
            }

        } catch (IOException ex) {
            Logger.getLogger(Registration.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            try {
                fw.close();
            } catch (IOException ex) {
                Logger.getLogger(Registration.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    // encrypt data before save
    public static String encrypt(String str) {

        int len = str.length();
        ArrayList<String> list = new ArrayList<String>();

        for (int i = 0; i < len; i++) {
            String sub = str.substring(i, i + 1);

            char c = sub.charAt(0);
            int val = (int) c;
            int val2 = val - i+ 2;

            char[] c2 = Character.toChars(val2);

            String sub2 = String.valueOf(c2);
            list.add(i, sub2);
        }

        String ans = "";
        for (String xyz : list) {

            ans = ans + xyz;
        }

        return ans;
    }

    // decrypt data before save
    public static String decrypt(String str) {

        int len = str.length();
        ArrayList<String> list = new ArrayList<String>();

        for (int i = 0; i < len; i++) {
            String sub = str.substring(i, i + 1);

            char c = sub.charAt(0);
            int val = (int) c;
            int val2 = val + i - 2;

            char[] c2 = Character.toChars(val2);

            String sub2 = String.valueOf(c2);
            list.add(i, sub2);
        }

        String ans = "";
        for (String xyz : list) {

            ans = ans + xyz;
        }

        return ans;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Registration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Registration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Registration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Registration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Registration().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPasswordField pass;
    private javax.swing.JTextField passHint;
    private javax.swing.JPasswordField rePass;
    private javax.swing.JTextField uName;
    // End of variables declaration//GEN-END:variables

    private void setIcon() {
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("icon.png")));
    }
}
